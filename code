import React, { useState } from 'react';
import { Home, IndianRupee, Users } from 'lucide-react';

type RentalProperty = {
  id: number;
  title: string;
  type: '1BHK' | '2BHK' | '3BHK';
  rent: number;
  bachelorsAllowed: boolean;
  location: string;
  image: string;
};

function App() {
  const [selectedType, setSelectedType] = useState<string>('all');
  const [bachelorsFilter, setBachelorsFilter] = useState<boolean | null>(null);
  const [maxRent, setMaxRent] = useState<number>(50000);

  const properties: RentalProperty[] = [
    {
      id: 1,
      title: "Sunny Corner Apartment",
      type: "1BHK",
      rent: 15000,
      bachelorsAllowed: true,
      location: "Koramangala",
      image: "https://images.unsplash.com/photo-1522708323590-d24dbb6b0267?auto=format&fit=crop&w=800&q=80"
    },
    {
      id: 2,
      title: "Family Paradise",
      type: "2BHK",
      rent: 25000,
      bachelorsAllowed: false,
      location: "Indiranagar",
      image: "https://images.unsplash.com/photo-1502672260266-1c1ef2d93688?auto=format&fit=crop&w=800&q=80"
    },
    {
      id: 3,
      title: "Luxury Villa Apartment",
      type: "3BHK",
      rent: 45000,
      bachelorsAllowed: true,
      location: "HSR Layout",
      image: "https://images.unsplash.com/photo-1484154218962-a197022b5858?auto=format&fit=crop&w=800&q=80"
    },
  ];

  const filteredProperties = properties.filter(property => {
    const typeMatch = selectedType === 'all' || property.type === selectedType;
    const bachelorsMatch = bachelorsFilter === null || property.bachelorsAllowed === bachelorsFilter;
    const rentMatch = property.rent <= maxRent;
    return typeMatch && bachelorsMatch && rentMatch;
  });

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 py-4 sm:px-6 lg:px-8 flex items-center">
          <Home className="h-8 w-8 text-blue-600" />
          <h1 className="ml-2 text-2xl font-bold text-gray-900">RentEasy</h1>
        </div>
      </header>

      {/* Filters */}
      <div className="max-w-7xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
        <div className="bg-white rounded-lg shadow p-6 mb-8">
          <h2 className="text-lg font-semibold mb-4">Filters</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <label className="block text-sm font-medium text-gray-700">Property Type</label>
              <select
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                value={selectedType}
                onChange={(e) => setSelectedType(e.target.value)}
              >
                <option value="all">All Types</option>
                <option value="1BHK">1 BHK</option>
                <option value="2BHK">2 BHK</option>
                <option value="3BHK">3 BHK</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700">Bachelors Allowed</label>
              <select
                className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                value={bachelorsFilter === null ? 'all' : bachelorsFilter.toString()}
                onChange={(e) => setBachelorsFilter(e.target.value === 'all' ? null : e.target.value === 'true')}
              >
                <option value="all">All</option>
                <option value="true">Yes</option>
                <option value="false">No</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700">Maximum Rent</label>
              <input
                type="range"
                min="5000"
                max="50000"
                step="1000"
                value={maxRent}
                onChange={(e) => setMaxRent(Number(e.target.value))}
                className="mt-1 block w-full"
              />
              <div className="text-sm text-gray-600 mt-1">Up to â‚¹{maxRent.toLocaleString()}</div>
            </div>
          </div>
        </div>

        {/* Property Listings */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {filteredProperties.map((property) => (
            <div key={property.id} className="bg-white rounded-lg shadow-md overflow-hidden">
              <img
                src={property.image}
                alt={property.title}
                className="w-full h-48 object-cover"
              />
              <div className="p-4">
                <h3 className="text-lg font-semibold text-gray-900">{property.title}</h3>
                <p className="text-gray-600">{property.location}</p>
                <div className="mt-4 flex items-center justify-between">
                  <div className="flex items-center">
                    <span className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      {property.type}
                    </span>
                    {property.bachelorsAllowed && (
                      <span className="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                        <Users className="w-3 h-3 mr-1" />
                        Bachelors
                      </span>
                    )}
                  </div>
                  <div className="flex items-center text-gray-900 font-semibold">
                    <IndianRupee className="w-4 h-4 mr-1" />
                    {property.rent.toLocaleString()}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>

        {filteredProperties.length === 0 && (
          <div className="text-center py-12">
            <p className="text-gray-500 text-lg">No properties found matching your criteria.</p>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;
